<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.jpetstore.dao.mybatis.mapper.ItemMapper">
  <cache />

  <insert id="insertNewEvent" parameterType="AuctionItem">
  	INSERT INTO AUCTIONITEM
  		(ITEMID, BEGINPRICE, LIMITPRICE, AUCTIONTIME, CURRENTPRICE, AUCTIONSTATUS)
  	VALUES
  		(#{itemId}, #{beginPrice}, #{limitPrice}, #{time}, 0, 'OPEN' )
  </insert> 
  
  <update id="closeEvent" parameterType="Date">
  	<![CDATA[
  		UPDATE AUCTIONITEM SET STATUS='CLOSE'
  		WHERE AUCTIONTIME <= #{curTime}
  	]]>
  </update>
  
    <select id="getMyPosting" resultType="Item">
     SELECT
       ITEMID,
		PRODUCTID,
		USERID AS username,
		SHIPWAY,
		PRICE,
		CATEGORY AS categoryId,
		SPECIES AS name,
		GENDER,
		CONTENT,
		IMAGE,
		CLASSIFY,
		STATUS
     FROM ITEM
     WHERE USERID = #{username}
  </select>
  
  <select id="getMyBidding" resultType="BiddingInfo">
  	SELECT DISTINCT MAX(BIDDINGINFO.EXPECTPRICE) OVER(PARTITION BY BIDDINGINFO.ITEMID) AS maxExpectPrice,
  	 BIDDINGINFO.ITEMID as itemId,
  	 AUCTIONITEM.AUCTIONSTATUS AS "auctionItem.auctionStatus"
  	FROM BIDDINGINFO, AUCTIONITEM
  	WHERE BIDDINGINFO.ITEMID = AUCTIONITEM.ITEMID AND BIDDINGINFO.USERID = #{username}
  </select>
  
  <update id="updateCurrentMaxPrice">
  	UPDATE AUCTIONITEM SET CURRENTPRICE = #{expectPrice}
  	WHERE ITEMID = #{itemId}
  </update>

<update id="updateItemPrice" parameterType="BiddingInfo">
	UPDATE ITEM SET PRICE = #{expectPrice}
	WHERE ITEMID = #{itemId}
</update>

	<select id="getSuccessBidder" resultType="BiddingInfo">
		SELECT EXPECTPRICE, BIDDINGTIME, ITEMID, USERNAME
		FROM (SELECT EXPECTPRICE, BIDDINGTIME, ITEMID, USERID AS USERNAME FROM BIDDINGINFO ORDER BY EXPECTPRICE DESC)
		WHERE ITEMID = #{itemId} AND ROWNUM = 1
	</select>
	
	<insert id="insertSuccessBidder" parameterType="BiddingInfo">
		INSERT INTO SUCCESSBID (SUCCESSBIDDER, BIDDEDPRICE, ITEMID)
		VALUES
			(#{username}, #{expectPrice}, #{itemId})
	</insert>

	<select id="getBidListByItem" resultType="BiddingInfo">
		SELECT EXPECTPRICE, BIDDINGTIME, USERID AS username FROM BIDDINGINFO WHERE ITEMID = #{itemId} ORDER BY EXPECTPRICE DESC
	</select>

  <select id="getItemListByProduct" resultType="Item">
    SELECT
      I.ITEMID,
      I.PRODUCTID,
      LISTPRICE,
      UNITCOST,
      SUPPLIER AS supplierId,
      I.PRODUCTID AS "product.productId",
      NAME AS "product.name",
      DESCN AS "product.description",
      CATEGORY AS "product.categoryId",
      STATUS,
      ATTR1 AS attribute1,
      ATTR2 AS attribute2,
      ATTR3 AS attribute3,
      ATTR4 AS attribute4,
      ATTR5 AS attribute5
    FROM ITEM I, PRODUCT P
    WHERE P.PRODUCTID = I.PRODUCTID
      AND I.PRODUCTID = #{value}
  </select>

  <select id="getItem" resultType="Item">
	SELECT
		ITEMID,
		PRODUCTID,
		USERID AS username,
		SHIPWAY,
		PRICE,
		CATEGORY AS categoryId,
		SPECIES AS name,
		GENDER,
		CONTENT,
		IMAGE,
		CLASSIFY,
		STATUS
	FROM ITEM
	WHERE ITEMID = #{ITEMID} 
   
    <!--  SELECT
      I.ITEMID,
      I.PRODUCTID,
      LISTPRICE,
      UNITCOST,
      SUPPLIER AS supplierId,
      I.PRODUCTID AS "product.productId",
      NAME AS "product.name",
      DESCN AS "product.description",
      CATEGORY AS "product.categoryId",
      STATUS,
      ATTR1 AS attribute1,
      ATTR2 AS attribute2,
      ATTR3 AS attribute3,
      ATTR4 AS attribute4,
      ATTR5 AS attribute5,
      QTY AS quantity
    FROM ITEM I, INVENTORY V, PRODUCT P
    WHERE P.PRODUCTID = I.PRODUCTID
      AND I.ITEMID = V.ITEMID
      AND I.ITEMID = #{value}-->
  </select>
	
<!-- 	<resultMap type="associationResultMap" id="AuctionItem">
		<id column="ITEMID" jdbcType="VARCHAR" property="itemId" />
		<result column="AUCTIONTIME" jdbcType="VARCHAR" property="time" />
		<result column="BEGINPRICE" jdbcType="NUMBERIC" property="beginPrice" />
		<result column="LIMITPRICE" jdbcType="NUMBERIC" property="limitPrice" />
		<result column="AUCTIONSTATUS" jdbcType="VARCHAR" property="auctionStatus" />
		<association property="item" column="itemId" javaType="Item">
			<id property="itemId" column="ITEMID" />
			<result property="productId" column="PRODUCTID"/>
			<result property="username" column="USERID" />
			<result property="categoryId" column="CATEGORY" />
		</association>
	</resultMap> -->
	<select id="getAuctionItem" parameterType="String" resultType="AuctionItem">
		SELECT
				ITEM.ITEMID AS "item.itemId",
				ITEM.USERID AS "item.username",
				ITEM.PRODUCTID AS "item.productId",
				ITEM.CATEGORY AS "item.categoryId",
				ITEM.CONTENT AS "item.content",
				ITEM.SHIPWAY AS "item.shipway",
				ITEM.IMAGE AS "item.image",
				ITEM.SPECIES AS "item.name",
				ITEM.STATUS AS "item.status",
				AUCTIONITEM.AUCTIONTIME AS time,
				AUCTIONITEM.BEGINPRICE AS beginPrice,
				AUCTIONITEM.LIMITPRICE AS limitPrice,
				AUCTIONITEM.CURRENTPRICE AS currentPrice,
				AUCTIONITEM.AUCTIONSTATUS AS auctionStatus
			FROM AUCTIONITEM, ITEM
			WHERE AUCTIONITEM.ITEMID = ITEM.ITEMID AND ITEM.ITEMID = #{itemId}  
	</select>

  <select id="getInventoryQuantity" resultType="int">
    SELECT QTY AS value
    FROM INVENTORY
    WHERE ITEMID = #{itemId}
  </select>

  <update id="updateInventoryQuantity">
    UPDATE INVENTORY 
    SET QTY = QTY - #{increment}
    WHERE ITEMID = #{itemId}
  </update>
  
  <select id="setProductId" parameterType="String" resultType="String">
  	SELECT PRODUCTID
  	FROM PRODUCT
  	WHERE NAME = #{species, jdbcType=VARCHAR}
  </select>
  
  <update id="updateCloseTime">
  	UPDATE AUCTIONITEM
  	SET AUCTIONTIME = #{auctionTime}
  	WHERE ITEMID = #{itemId}
  </update>
  
  <insert id="insertNewProduct" parameterType="com.example.jpetstore.domain.Item">
  	<selectKey keyProperty="productId" resultType="String" order="BEFORE">
  		select 'PRODUCT-' || TO_CHAR(product_seq.nextval) AS productId from DUAL
  	</selectKey>	
  	INSERT INTO PRODUCT
  		(PRODUCTID, CATEGORY, NAME)
  	VALUES
  		(#{productId}, #{categoryId}, #{name, jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertBid" parameterType="BiddingInfo">
  	INSERT INTO BIDDINGINFO
  		(EXPECTPRICE, BIDDINGTIME, USERID, ITEMID)
  	VALUES
  		(#{expectPrice}, #{biddingTime}, #{username}, #{itemId})
  </insert>
  
  <insert id="insertFixedItem" parameterType="com.example.jpetstore.domain.Item">
  	<selectKey keyProperty="itemId" resultType="String" order="BEFORE">
  		select 'ITEM-' || TO_CHAR(item_seq.nextval) AS itemId from DUAL
  	</selectKey>
  	INSERT INTO ITEM
  		(ITEMID, PRODUCTID, USERID, STATUS, SHIPWAY, PRICE, CATEGORY, SPECIES, CONTENT, GENDER, IMAGE, CLASSIFY)
  	VALUES
  		(#{itemId}, #{productId}, #{username}, 'OPEN', #{shipway},  #{price}, #{categoryId}, #{name}, #{content, jdbcType=VARCHAR}, #{gender}, #{image}, 'FIXED')
  </insert>
  
  <insert id="insertInventory">
  	INSERT INTO INVENTORY(ITEMID, QTY) VALUES(#{itemId}, 1)  
  </insert>
  
  <select id="getItemListByCategory" resultType="Item">
  	SELECT
  		ITEMID,
  		SPECIES as name,
  		USERID as username,
  		PRICE,
  		CATEGORY as categoryId,
  		IMAGE,
  		CLASSIFY,
  		STATUS
  	FROM ITEM
  	WHERE CATEGORY = #{categoryId}
  </select>
  
  <select id="getTopAuction" resultType="HotItem">
  	<![CDATA[SELECT ITEMID, BIDDER
  		FROM (select COUNT(USERID) AS BIDDER, AUCTIONITEM.ITEMID AS ITEMID , AUCTIONITEM.AUCTIONSTATUS AS AUCTIONSTATUS 
  			FROM BIDDINGINFO, AUCTIONITEM WHERE BIDDINGINFO.ITEMID = AUCTIONITEM.ITEMID AND AUCTIONSTATUS='OPEN'
    		GROUP BY AUCTIONITEM.ITEMID, AUCTIONITEM.AUCTIONSTATUS
    		ORDER BY BIDDER DESC) 
  		WHERE ROWNUM <=3 
  	  	]]>
  </select>
  
  <update id="updateFixedItem" parameterType="Item">
  	UPDATE ITEM SET
  		SHIPWAY = #{shipway},
  		CONTENT = #{content, jdbcType=VARCHAR},
  		GENDER = #{gender}
  	WHERE ITEMID = #{itemId}
  </update>
  
  <update id="updateStatus">
  	UPDATE ITEM SET
  		STATUS = 'CLOSE'
  	WHERE ITEMID = #{value}
  </update>
  
    <update id="updateAuctionItem" parameterType="Item">
  	UPDATE ITEM SET
  		SHIPWAY = #{shipway},
  		CONTENT = #{content, jdbcType=VARCHAR},
  		GENDER = #{gender}
  	WHERE ITEMID = #{itemId}
  </update>
  
    <insert id="insertAuctionItem" parameterType="Item">
  	<selectKey keyProperty="itemId" resultType="String" order="BEFORE">
  		select 'ITEM-' || TO_CHAR(item_seq.nextval) AS itemId from DUAL
  	</selectKey>
  	INSERT INTO ITEM
  		(ITEMID, PRODUCTID, USERID, STATUS, SHIPWAY, CATEGORY, SPECIES, CONTENT, GENDER, IMAGE, CLASSIFY)
  	VALUES
  		(#{itemId}, #{productId}, #{username}, 'OPEN', #{shipway}, #{categoryId}, #{name}, #{content, jdbcType=VARCHAR}, #{gender}, #{image}, 'AUCTION')
  </insert>
  
  <insert id="insertAuctionInfo" parameterType="AuctionItem">
  	INSERT INTO AUCTIONITEM
  		(ITEMID, BEGINPRICE, LIMITPRICE, AUCTIONTIME, CURRENTPRICE, AUCTIONSTATUS)
  	VALUES
  		(#{itemId}, #{beginPrice}, #{limitPrice}, #{time}, 0, 'OPEN' )
  </insert>
  
   <delete id="deleteMyItem" parameterType="String">
  	DELETE FROM ITEM
  	WHERE ITEMID = #{itemId}
  </delete> 
  
  <select id="getItemListBySpecies" resultType="Item">
  	SELECT
  		ITEMID,
		PRODUCTID,
		USERID AS username,
		SHIPWAY,
		PRICE,
		CATEGORY AS categoryId,
		SPECIES AS name,
		GENDER,
		CONTENT,
		IMAGE,
		CLASSIFY,
		STATUS
  	FROM ITEM
  	WHERE SPECIES LIKE '%' ||  #{name} || '%'
  </select>
  
  <select id="getItemListByUserId" resultType="Item">
  	SELECT
  		ITEMID,
		PRODUCTID,
		USERID AS username,
		SHIPWAY,
		PRICE,
		CATEGORY AS categoryId,
		SPECIES AS name,
		GENDER,
		CONTENT,
		IMAGE,
		CLASSIFY,
		STATUS
  	FROM ITEM
  	WHERE USERID LIKE '%' || #{username} || '%'
  </select>
  
  
  
  
</mapper>